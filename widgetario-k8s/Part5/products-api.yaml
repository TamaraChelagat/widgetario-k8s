
apiVersion: v1
kind: Service
metadata:
  name: products-api
  labels:
    app: products-api
spec:
  ports:
  - port: 8081
    targetPort: 8080
    name: http
  selector:
    app: products-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-api
  labels:
    app: products-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: products-api
  template:
    metadata:
      labels:
        app: products-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: api
        image: widgetario/products-api:21.03
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_CONFIG_LOCATION
          value: /config/application.properties
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # Temporarily disable probes for testing
        # readinessProbe:
        #   httpGet:
        #     path: /actuator/health
        #     port: 8080
        #   initialDelaySeconds: 20
        #   periodSeconds: 10
        # livenessProbe:
        #   httpGet:
        #     path: /actuator/health
        #     port: 8080
        #   initialDelaySeconds: 60
        #   periodSeconds: 20
      volumes:
      - name: config
        configMap:
          name: products-api-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: products-api-config
data:
  application.properties: |
    spring.datasource.url=jdbc:postgresql://products-db-0.products-db:5432/postgres
    spring.datasource.username=postgres
    spring.datasource.password=postgres-password
    spring.jpa.hibernate.ddl-auto=update