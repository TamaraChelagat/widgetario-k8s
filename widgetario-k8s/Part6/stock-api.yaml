apiVersion: v1
kind: Service
metadata:
  name: stock-api
  labels:
    app: stock-api
spec:
  ports:
  - port: 8082
    targetPort: 8080
    name: http
  selector:
    app: stock-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stock-api
  labels:
    app: stock-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stock-api
  template:
    metadata:
      labels:
        app: stock-api
        component: api
        metrics: enabled
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: api
        image: widgetario/stock-api:21.03
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: POSTGRES_CONNECTION_STRING
          value: "host=products-db-1.products-db port=5432 user=postgres password=postgres-password dbname=postgres sslmode=disable"
        - name: ENABLE_METRICS
          value: "true"  # Explicitly enable metrics
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "300m"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cache-volume
          mountPath: /cache
      volumes:
      - name: cache-volume
        emptyDir: {}